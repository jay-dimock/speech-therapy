{"version":3,"sources":["util/SessionCookie.js","util/SessionContext.js","util/AxiosErrors.js","constants/SpeechEndpoint.js","components/PageHeader.js","components/WrappedLink.js","components/Link.js","components/Instructions.js","views/Main.js","components/TextInput.js","components/RegistrationForm.js","views/Register.js","components/LoginForm.js","views/Login.js","views/Logout.js","views/Exercise.js","util/SpeechRecognition.js","constants/Categories.js","components/Timer.js","components/Transcript.js","views/StartExercise.js","components/DeleteWord.js","components/WordDraggable.js","components/EditWords.js","views/EditExercise.js","components/Report_AllDates.js","components/Report_OneDate.js","views/Reports.js","App.js","util/Theme.js","serviceWorker.js","index.js"],"names":["getSessionCookie","sessionCookie","Cookies","undefined","JSON","parse","MyContext","React","createContext","err","response","isAxiosError","console","log","toJSON","msg","name","message","description","error","data","errors","errResponse","errDict","Object","keys","key","smallStyle","textAlign","verticalAlign","display","linkStyle","paddingTop","paddingBottom","props","context","useContext","SessionContext","currentPage","links","useState","anchorEl","setAnchorEl","push","text","path","disabled","session","userId","followLink","navigate","AppBar","position","className","style","Button","aria-controls","aria-haspopup","onClick","event","currentTarget","fontSize","Menu","id","keepMounted","open","Boolean","onClose","map","link","i","MenuItem","selected","Card","marginBottom","padding","color","firstName","menuItem","linkClass","theme","to","Link","component","children","show","alwaysShow","setShow","marginTop","WrappedLink","currentTheme","newTheme","toggleTheme","setSession","PageHeader","href","axios","put","SpeechEndpoint","then","res","catch","AxiosErrors","Instructions","useStyles","makeStyles","root","margin","spacing","helperText","labelText","fieldName","value","changeHandler","inputType","type","classes","FormControl","TextField","label","onChange","e","target","variant","FormHelperText","lastName","email","password","passwordConfirm","newUser","setNewUser","setErrors","register","preventDefault","post","_id","onSubmit","TextInput","RegistrationForm","genericError","user","setUser","login","LoginForm","useEffect","noThrow","restart","param","lastCategory","maxWidth","window","SpeechRecognition","webkitSpeechRecognition","useSpeechRecognition","onEnd","onResult","onError","recognition","useRef","listening","setListening","supported","processResult","transcript","Array","from","results","result","join","listen","args","lang","interimResults","continuous","maxAlternatives","grammars","current","onresult","onerror","onend","start","stop","Categories","alphabet","split","capsAllowed","length","Timer","this","minutes","seconds","Component","wordStyle","border","borderRadius","arr","filter","w","unique","Set","overflow","word","lowercase","setSeconds","setTranscript","category","setCategory","newTranscript","toLowerCase","prevTranscript","endExercise","setNewCategory","ticker","setTimeout","clearTimeout","newCat","Math","floor","random","includes","allowCaps","Transcript","iconStyle","action","paddingLeft","exerciseId","index","deleteWord","setWord","ref","useDrop","accept","hover","item","drop","dragIndex","hoverIndex","combineWords","useDrag","collect","monitor","isDragging","drag","dragWord","hoverWord","updateWord","updatedWord","deleteIndex","opacity","Paper","DeleteWord","marginLeft","html","onKeyPress","which","keyCode","trim","words","setWords","deleting","setDeleting","deleteExercise","finally","delete","DndProvider","backend","HTML5Backend","WordDraggable","dragIconStyle","loaded","setLoaded","showInstructions","setShowInstructions","get","EditWords","AllDates","setData","timezone","encodeURIComponent","Intl","DateTimeFormat","resolvedOptions","timeZone","Table","size","TableHead","TableRow","TableCell","TableBody","d","sum","OneDate","todayString","todayUtc","Date","offset","getTimezoneOffset","minutesAdjusted","setMinutes","getMinutes","toISOString","substring","getTodayLocalDateOnly","reportDateString","date","isToday","friendlyDate","replace","toDateString","report","App","expires","setSessionCookie","darkOrLight","createMuiTheme","palette","primary","teal","Provider","ThemeProvider","CssBaseline","Main","default","Register","Login","Logout","Exercise","StartExercise","EditExercise","Reports","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8e369ff7.chunk.js","sourcesContent":["import * as Cookies from 'js-cookie';\r\n\r\nexport const setSessionCookie = (session) => {\r\n    Cookies.remove(\"session\");    \r\n    Cookies.set(\"session\", session, {expires:1}); //\"expires\" value is number of days\r\n}\r\n\r\nexport const getSessionCookie = () => {\r\n    const sessionCookie = Cookies.get(\"session\");\r\n\r\n    if (sessionCookie === undefined) {\r\n        return { };\r\n    } else {\r\n        return JSON.parse(sessionCookie);\r\n    }\r\n}","import React from 'react';\r\nimport {getSessionCookie} from './SessionCookie';\r\n\r\n\r\nconst MyContext = React.createContext(getSessionCookie());\r\nexport default MyContext;","export default (err) => {\r\n    if(!err.response) {\r\n        if(err.isAxiosError) {\r\n            console.log(err.toJSON());\r\n            let msg = `${err.name}: ${err.message}`;\r\n            if (err.description) msg += \"description: \" + err.description;\r\n            return {error: msg};\r\n        } else {\r\n            console.log(\"err:\",err);\r\n            //console.log(JSON.stringify(err));\r\n            return {error: \"Unknown Error\"}\r\n        }\r\n    }\r\n    if (!err.response.data) {\r\n        console.log(\"err:\", err.response);\r\n        return {error: err.response};\r\n    } else if (!err.response.data.errors) {\r\n        console.log(err.response.data);\r\n        return {error: err.response.data};\r\n    } else {\r\n        const errResponse = err.response.data.errors;\r\n        const errDict = {};\r\n        for (const key of Object.keys(errResponse)) {\r\n            console.log(`${key}: ${errResponse[key].message}`);\r\n            errDict[key] = errResponse[key].message;\r\n        }\r\n        return errDict;\r\n    }\r\n}","export default \"http://localhost:8000/api/speech/\";","import React, {useContext} from 'react';\r\nimport {navigate} from '@reach/router';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Card from '@material-ui/core/Card';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\n//import {fontStyle} from '../util/Theme';\r\nimport SessionContext from '../util/SessionContext';\r\n\r\n\r\nconst smallStyle = {\r\n    textAlign: \"left\",\r\n    verticalAlign: \"middle\",    \r\n    display: \"inline-block\",\r\n}\r\n\r\nconst linkStyle = {\r\n    display:\"inline-block\",\r\n    paddingTop:\"10px\",\r\n    paddingBottom:\"10px\",\r\n    verticalAlign: \"middle\",\r\n}\r\n\r\nexport default (props) => {\r\n    const context = useContext(SessionContext);\r\n    const { currentPage } = props;\r\n    const links = [];\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    //const textStyle = fontStyle(context.session.theme);\r\n\r\n    const handleClick = event => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    links.push({text:\"Home\", path:\"/\", disabled: currentPage === \"home\" })\r\n\r\n    if (!context.session.userId) {\r\n        links.push({text:\"Log In\", path:\"/login\", disabled: currentPage === \"login\"})\r\n    } else {\r\n        links.push({text:\"Exercises\", path:\"/exercise/fresh\", disabled: currentPage === \"exercise\"});\r\n        links.push({text:\"Reports\", path:\"/reports/onedate/today\", disabled: currentPage === \"reports\"});\r\n\r\n        if (context.session.userId === \"guest\") {\r\n            links.push({text:\"Register\", path:\"/register\", disabled: false});\r\n        } else {\r\n            links.push({text:\"Log Out\", path:\"/logout\", disabled: false});\r\n        }\r\n    }   \r\n\r\n    const followLink = (path, disabled) => {\r\n        if (anchorEl !== null) setAnchorEl(null);\r\n        if (disabled) return;\r\n        navigate(path);\r\n    } \r\n\r\n    return (<>       \r\n        <AppBar position=\"static\">\r\n            <h1 className=\"bigScreen\">Speech Therapy</h1>\r\n            \r\n            <div className=\"smallScreen left\">\r\n                <div style={smallStyle}>\r\n                    <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n                        <MenuIcon fontSize=\"large\"/>\r\n                    </Button>\r\n                    <Menu id=\"simple-menu\"\r\n                            anchorEl={anchorEl}\r\n                            keepMounted\r\n                            open={Boolean(anchorEl)}\r\n                            onClose={handleClose} >\r\n                        {links.map((link, i) =>\r\n                            <MenuItem key={i} \r\n                                onClick={() => followLink(link.path, link.disabled)}\r\n                                selected={link.disabled}\r\n                                >{link.text}</MenuItem>\r\n                        )}\r\n                    </Menu>            \r\n                </div>\r\n                <h2>Speech Therapy</h2>\r\n            </div>            \r\n        </AppBar>\r\n\r\n        <Card className=\"bigScreen\" style={{marginBottom: \"20px\", padding:\"0\"}}>\r\n            {links.map((link, i) =>                 \r\n                <MenuItem key={i} color=\"primary\" \r\n                    style={linkStyle} \r\n                    onClick={() => followLink(link.path, link.disabled)}\r\n                    selected={link.disabled}>\r\n                    {(link.text === \"Log Out\" || link.text === \"Register\") && <span>{context.session.firstName}: </span>}\r\n                    {link.text}\r\n                </MenuItem>\r\n            )}\r\n        </Card>\r\n\r\n    </>);\r\n}\r\n","import React, {useContext} from 'react';\r\nimport { Link as RouterLink } from '@reach/router';\r\nimport { Link } from '@material-ui/core';\r\nimport SessionContext from '../util/SessionContext';\r\n\r\nexport default (props) => {\r\n    const context = useContext(SessionContext);\r\n    \r\n    const style = { padding: \"0\" }\r\n    if(props.menuItem) {\r\n        style.padding = \"0 10px\";\r\n        style[\"fontWeight\"] = \"bold\";\r\n    }\r\n    \r\n    const currentTheme = context.session.theme || \"dark\";\r\n    const linkClass = \"link\" + currentTheme;\r\n\r\n    return (\r\n        <RouterLink to={props.to || \"\"}>\r\n            <Link className={linkClass} component=\"button\" style={style}>{props.children}</Link>\r\n        </RouterLink>\r\n    )    \r\n}\r\n","import React, {useContext} from 'react';\r\n//import { Link as RouterLink } from '@reach/router';\r\nimport { Link } from '@material-ui/core';\r\nimport SessionContext from '../util/SessionContext';\r\n\r\nexport default (props) => {\r\n    const context = useContext(SessionContext);\r\n    const currentTheme = context.session.theme || \"dark\";\r\n    const linkClass = \"link\" + currentTheme;\r\n\r\n    return (\r\n        <Link className={linkClass} component=\"button\" onClick={props.onClick}>{props.children}</Link>\r\n    )    \r\n}\r\n","import React, {useState} from 'react';\r\n//import {Link} from '@material-ui/core';\r\nimport Link from './Link';\r\nimport WrappedLink from './WrappedLink';\r\n\r\nexport default (props) => {\r\n    const [show, setShow] = useState(props.show || props.alwaysShow || false);\r\n\r\n    return (<div> \r\n        {show && <h2 style={{marginBottom:\"0\"}}>Instructions</h2> }\r\n        {!show && <div style={{marginTop:\"20px\"}}></div> }        \r\n\r\n        {!props.alwaysShow && \r\n            <Link style={{marginBottom:\"0.5rem\"}} component=\"button\" onClick={()=>setShow(!show)}>\r\n                {show ? \"Hide Instructions\" : \"Instructions\"}\r\n            </Link>}\r\n\r\n        {show && <div className=\"left\">     \r\n            <h3>How it works</h3>   \r\n            <ul className=\"spaced\">\r\n                <li>You will be shown a random category. For example: \"Words that begin with B\".</li>\r\n                <li>A 60 second timer will start. Speak as many words as you can that match the category.</li>\r\n                <li>The words you speak will display on the screen, often with a delay of a second or two.</li>\r\n                <li>Sometimes the speech recognition software will not hear you correctly. That's okay; you'll be\r\n                    able to edit your answers after the exercise is complete.</li>                \r\n                <li>When the timer reaches zero, you'll be taken to a results view where you can delete \r\n                    and/or edit incorrect words.</li>\r\n            </ul> \r\n            <h3>Tips</h3>\r\n            <ul className=\"spaced\">\r\n                <li>If you can't think of any words in the category provided, click the \"New Category\" button.</li>\r\n                <li>If you've said as many words as you can, and don't want to wait for the timer to finish, \r\n                    click the \"Quit Early\" button.</li>\r\n                <li>Sometimes an answer is made up of more than one word. For example, \"North Carolina\". The speech\r\n                    software will record this as two separate words. When you get to the results screen, you can\r\n                    combine them back into one word by dragging and dropping one word onto another.</li>\r\n                <li>To go back and edit the exercise later, you can access it from \r\n                    the <WrappedLink to=\"/reports\">Reports Page</WrappedLink>. <i>You can only edit today's exercises. \r\n                    Earlier dates cannot be modified.</i></li>\r\n            </ul>\r\n            <h3>FAQ</h3>\r\n            <h4>How does the software know if a word belongs in the category?</h4>\r\n            <p>It doesn't. It simply listens to your voice and records the words. When you edit the exercise,\r\n                YOU decide if the word really belongs to the category. If it does not, you should delete the word.</p>\r\n        </div>}        \r\n    </div>)\r\n}","import React, {useContext} from 'react';\r\n\r\nimport {navigate} from '@reach/router';\r\nimport {Link} from '@material-ui/core';\r\n\r\nimport axios from 'axios';\r\nimport AxiosErrors from '../util/AxiosErrors';\r\n\r\nimport SessionContext from '../util/SessionContext'\r\nimport SpeechEndpoint from '../constants/SpeechEndpoint';\r\nimport PageHeader from '../components/PageHeader'\r\nimport WrappedLink from '../components/WrappedLink';\r\nimport Instructions from '../components/Instructions';\r\n\r\nexport default (props) => {\r\n    const context = useContext(SessionContext);\r\n    const currentTheme = context.session.theme || \"dark\";\r\n    const newTheme = currentTheme === \"dark\" ? \"light\" : \"dark\";\r\n    const linkClass = \"link\" + currentTheme;\r\n\r\n    const saveNewTheme = () => {\r\n        if (!context.session.userId || context.session.userId === \"guest\") {\r\n            toggleTheme();\r\n            return;\r\n        }\r\n\r\n        axios.put(SpeechEndpoint + \"user/\" + context.session.userId, {\r\n            theme: newTheme\r\n        })\r\n        .then(res => toggleTheme())\r\n        .catch(err => AxiosErrors(err))\r\n    }\r\n\r\n    const toggleTheme = () => {\r\n        context.setSession ({\r\n            ...context.session,\r\n            theme: newTheme\r\n        });\r\n        navigate('/')\r\n    }\r\n\r\n    return (<>\r\n        <PageHeader currentPage=\"home\"/>\r\n        <div className=\"container\">\r\n        <h2>About</h2>\r\n        <p className=\"left\">This site provides a specific type of cognitive speech therapy \r\n            exercise: thinking of and speaking words to match categories. This is done using the <Link className={linkClass} \r\n            href=\"https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition\">Speech Recognition \r\n            Web API</Link> to record spoken words. Currently, the Speech Recognition API only works \r\n            with the Chrome browser, and only if the user is NOT using iOS (iPhone, iPad). \r\n            This may change in the future. See \"Browser Support\" \r\n            on <Link className={linkClass} href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Speech_API/Using_the_Web_Speech_API#Browser_support\">\r\n            this page</Link> for updates.</p>\r\n\r\n        <p>Theme: <Link component=\"button\" onClick={saveNewTheme} className={linkClass}>Switch to {newTheme} theme</Link></p>\r\n        \r\n        {!context.session.userId && <Instructions alwaysShow={true}/>}\r\n        {!context.session.userId && <p>Ready to begin? <WrappedLink to=\"/login\">Log In</WrappedLink></p> }\r\n\r\n        {context.session.userId && <p>Get started: <WrappedLink to=\"/exercise/instructions\">Exercises / Instructions</WrappedLink></p>}\r\n        </div>\r\n    </>)\r\n}","import React from 'react';\r\nimport { FormControl, FormHelperText, TextField} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      '& > *': { margin: theme.spacing(1) }\r\n    },\r\n    helperText: {\r\n        marginTop: \"0\", padding: \"0\"\r\n    }\r\n  }));\r\n\r\nexport default (props) => {\r\n    const {labelText, fieldName, value, error, changeHandler} = props;\r\n    const inputType = props.type ?? \"text\"\r\n\r\n    const classes = useStyles();\r\n\r\n    return (<>\r\n        <FormControl className={classes.root}>\r\n            <TextField \r\n                type={inputType} \r\n                label={labelText} \r\n                value={value} \r\n                onChange={(e) => changeHandler(fieldName, e.target.value)} \r\n                variant=\"filled\" \r\n                error={error && true}/>\r\n            {error && \r\n                <FormHelperText \r\n                    className={classes.helperText} \r\n                    error={true}>{error}\r\n                </FormHelperText>}\r\n        </FormControl><br/>\r\n    </>)\r\n}","import React, {useState, useContext} from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport TextInput from './TextInput';\r\nimport axios from 'axios';\r\nimport { navigate } from '@reach/router';\r\n\r\nimport SpeechEndpoint from '../constants/SpeechEndpoint';\r\nimport SessionContext from '../util/SessionContext';\r\nimport AxiosErrors from '../util/AxiosErrors';\r\n\r\nexport default () => {\r\n    const context = useContext(SessionContext);\r\n\r\n    const [newUser, setNewUser] = useState({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        passwordConfirm: \"\",\r\n    });\r\n\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const changeHandler = (fieldName, value) => {\r\n        setNewUser({ ...newUser, [fieldName]: value })\r\n    }\r\n\r\n    const register = (e) => {\r\n        e.preventDefault();\r\n        setErrors({});\r\n\r\n        axios.post(SpeechEndpoint + \"user/register\", newUser)\r\n            .then(res => {\r\n                context.setSession({\r\n                    ...context.session,\r\n                    userId: res.data._id,\r\n                    firstName: newUser.firstName, \r\n                    lastName: newUser.lastName,\r\n                })\r\n                navigate('/');\r\n            })\r\n            .catch(err => {\r\n                setErrors(AxiosErrors(err));\r\n            })\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={register}>\r\n            <TextInput labelText=\"First Name\" fieldName=\"firstName\" \r\n                value={newUser.firstName} error={errors[\"firstName\"]} changeHandler={changeHandler}/>\r\n            \r\n            <TextInput labelText=\"Last Name\" fieldName=\"lastName\" \r\n                value={newUser.lastName} error={errors[\"lastName\"]} changeHandler={changeHandler}/>\r\n            \r\n            <TextInput labelText=\"Email\" fieldName=\"email\" type=\"email\"\r\n                value={newUser.email} error={errors[\"email\"]} changeHandler={changeHandler}/>\r\n            \r\n            <TextInput labelText=\"Password\" fieldName=\"password\" type=\"password\"\r\n                value={newUser.password} error={errors[\"password\"]} changeHandler={changeHandler}/>\r\n            \r\n            <TextInput labelText=\"Confirm Password\" fieldName=\"passwordConfirm\" type=\"password\"\r\n                value={newUser.passwordConfirm} error={errors[\"passwordConfirm\"]} changeHandler={changeHandler}/>\r\n            \r\n            <Button style={{margin:\"10px\"}} type=\"button\" variant=\"contained\" color=\"primary\" onClick={register}>Register</Button>\r\n        </form>\r\n    )\r\n}","import React from 'react';\r\nimport RegistrationForm from '../components/RegistrationForm';\r\n\r\nimport PageHeader from '../components/PageHeader'\r\nimport WrappedLink from '../components/WrappedLink'\r\n\r\nexport default () => {\r\n\r\n    return (<>\r\n        <PageHeader currentPage=\"register\"/>\r\n        <h2>Register New User</h2>\r\n        <RegistrationForm />\r\n        <div style={{marginTop:\"10px\"}}>Already a registered? <WrappedLink to=\"/login\">Log In</WrappedLink></div>\r\n    </>)\r\n\r\n}","import React, {useState, useContext} from 'react';\r\nimport { Button, FormHelperText } from '@material-ui/core';\r\nimport TextInput from './TextInput';\r\nimport axios from 'axios';\r\nimport { navigate } from '@reach/router';\r\n\r\nimport SpeechEndpoint from \"../constants/SpeechEndpoint\";\r\nimport SessionContext from '../util/SessionContext';\r\nimport AxiosErrors from '../util/AxiosErrors';\r\nimport Link from './Link';\r\n\r\nconst genericError = {\r\n    padding: \"10px 15px\",\r\n    marginTop: \"10px\",\r\n    textAlign: \"center\",\r\n    fontSize: \"1rem\"\r\n}\r\n\r\nexport default () => {\r\n    const context = useContext(SessionContext);\r\n\r\n    const [user, setUser] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n    });\r\n\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const changeHandler = (fieldName, value) => {\r\n        setUser({ ...user, [fieldName]: value })\r\n    }\r\n\r\n    const login = (e) => {\r\n        e.preventDefault();\r\n        \r\n        axios.post(SpeechEndpoint + \"user/login\", user)\r\n            .then(res => {\r\n                context.setSession({\r\n                    ...context.session,\r\n                    userId: res.data._id,\r\n                    firstName: res.data.firstName,\r\n                    lastName: res.data.lastName,\r\n                    theme: res.data.theme\r\n                })\r\n                navigate('/');\r\n            })\r\n            .catch(err => {\r\n                setErrors(AxiosErrors(err));\r\n            })\r\n    }\r\n\r\n    const guestLogin = () => {\r\n        context.setSession ({\r\n            ...context.session,\r\n            userId: \"guest\",\r\n            firstName: \"Guest\",\r\n        })\r\n        navigate('/');\r\n    }\r\n\r\n    return (<>\r\n        <form onSubmit={login}>\r\n            <TextInput labelText=\"Email\" fieldName=\"email\" \r\n                value={user.email} error={errors[\"email\"]} changeHandler={changeHandler}/>\r\n\r\n            <TextInput labelText=\"Password\" fieldName=\"password\" type=\"password\"\r\n                value={user.password} error={errors[\"password\"]} changeHandler={changeHandler}/>\r\n\r\n            <Button style={{margin:\"10px\"}} type=\"button\" variant=\"contained\" color=\"primary\" onClick={login}>Log In</Button>\r\n        </form>\r\n        <Link onClick={guestLogin}>Log in as Guest</Link>\r\n        {errors[\"error\"] && \r\n            <FormHelperText style={genericError}  error={true}>{errors[\"error\"]}</FormHelperText> \r\n        }        \r\n    </>)\r\n}","import React from 'react';\r\nimport LoginForm from '../components/LoginForm';\r\n\r\nimport PageHeader from '../components/PageHeader'\r\nimport WrappedLink from '../components/WrappedLink'\r\n\r\nexport default () => {\r\n\r\n    return (<>\r\n        <PageHeader currentPage=\"login\"/>\r\n        <h2>Log In</h2>\r\n        <LoginForm />\r\n        <div style={{marginTop:\"10px\"}}>New user? <WrappedLink to=\"/register\">Register</WrappedLink></div>\r\n    </>)\r\n\r\n}","import React, {useContext, useEffect} from 'react';\r\nimport SessionContext from '../util/SessionContext';\r\nimport { Redirect } from '@reach/router'\r\n\r\nexport default () => {\r\n    const context = useContext(SessionContext);\r\n    \r\n    useEffect(() => {        \r\n        context.setSession({ theme: context.session.theme });\r\n        //eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n    \r\n    return <Redirect noThrow to=\"/login\" />\r\n}\r\n","import React, {useContext} from 'react';\r\nimport { Redirect, navigate } from '@reach/router'\r\nimport {Button} from '@material-ui/core';\r\nimport SessionContext from '../util/SessionContext';\r\nimport PageHeader from '../components/PageHeader';\r\nimport Instructions from '../components/Instructions';\r\nimport WrappedLink from '../components/WrappedLink';\r\n\r\nexport default (props) => {\r\n    const context = useContext(SessionContext);\r\n    if (!context.session.userId) { return <Redirect noThrow to=\"/login\" /> }\r\n\r\n    const restart = props.param === \"restart\";\r\n    \r\n    return (<> \r\n        <PageHeader currentPage=\"exercise\"/>\r\n        <div className=\"container\">        \r\n            <h2>Exercises</h2>\r\n            {!restart && <p>Ready to start?</p>}\r\n            {restart && <p>You skipped this category: {context.session.lastCategory}</p>}\r\n            <Button variant=\"contained\" color=\"primary\" onClick={() => navigate(\"/startexercise\")}>Start {restart && \"New Category\"}</Button>\r\n            {context.session.userId===\"guest\" && \r\n                <p style={{maxWidth:\"500px\", margin: \"10px auto\", }}>As a Guest User, you can do exercises to see how it works -- but when the exercise is finished, \r\n                    you'll be taken back to this page without the chance to view or edit your results. For a better experience, \r\n                    please <WrappedLink to=\"/login\">Log In</WrappedLink>. Your personal information will not be shared with anyone.</p>}\r\n            <Instructions show={props.param === \"instructions\"}/>\r\n        </div>\r\n    </>)\r\n}","import { useRef, useEffect, useState} from 'react';\r\n\r\nwindow.SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n\r\nconst useSpeechRecognition = (props = {}) => {\r\n    const {\r\n        onEnd = () => {},\r\n        onResult = () => {},\r\n        onError = () => {}\r\n    } = props;\r\n\r\n    const recognition = useRef(null);\r\n    const [listening, setListening] = useState(false);\r\n    const supported = !!window.SpeechRecognition;\r\n\r\n    const processResult = (event) => {\r\n        const transcript = Array.from(event.results)\r\n            .map(result => result[0])\r\n            .map(result => result.transcript)\r\n            .join('');\r\n\r\n        onResult(transcript);\r\n    };\r\n\r\n    const listen = (args = {}) => {\r\n        if (listening) return;\r\n        const {\r\n            lang = '', interimResults = true, continuous = false, maxAlternatives = 1, grammars\r\n        } = args;\r\n        \r\n        setListening(true);\r\n        recognition.current.lang = lang;\r\n        recognition.current.interimResults = interimResults;\r\n        recognition.current.onresult = processResult;\r\n        recognition.current.onerror = (e) => onError(e);\r\n        recognition.current.continuous = continuous;\r\n        recognition.current.maxAlternatives = maxAlternatives;\r\n        if (grammars) {\r\n            recognition.current.grammars = grammars;\r\n        }\r\n        // SpeechRecognition stops automatically after inactivity\r\n        // We want it to keep going until we tell it to stop\r\n        recognition.current.onend = () => recognition.current.start();        \r\n        recognition.current.start();\r\n    };\r\n\r\n    const stop = () => {\r\n        if (!listening) return;\r\n        recognition.current.onresult = () => {};\r\n        recognition.current.onend = () => {};\r\n        recognition.current.onerror = () => {};\r\n        setListening(false);\r\n        recognition.current.stop();\r\n        onEnd();\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!supported) return;\r\n        recognition.current = new window.SpeechRecognition();\r\n    }, []);\r\n\r\n    return { listen, listening, stop, supported };\r\n};\r\n\r\nexport default useSpeechRecognition;","const Categories = [\r\n    'Adjectives','Animals','Aquatic animals','Body Parts','Buildings','Businesses','Characters',\r\n    'Cities','Classroom Objects','Clothing','Colors','Condiments','Consonants','Countries',\r\n    'Cuisine','Desserts','Drinks','Emotions','Even Numbers','Exercises','Flowers','Food','Fruits',\r\n    'Furniture','Gems','Habits','Halloween','Hanukkah','Holidays','Ingredients','Insects','Internal Organs',\r\n    'Islands','Jobs','Kitchen Utensils','Landmarks','Languages','Liquids','Measuring Units',\r\n    'Music Types','Musical Instruments','Mythical Creatures','New Year’s','Nouns','Odd Numbers',\r\n    'Office Supplies','Places','Plants','Prepositions','Religions','Rhyming Words','School Subjects',\r\n    'Seasonings','Shoes','Sizes','Sounds','Sports','States','Summer','Thanksgiving','Tools','Traditions',\r\n    'Transportation','Valentine’s Day','Vegetables','Verbs','Weather','Weddings','Winter Holidays', \r\n    'Swear Words'\r\n];\r\n\r\nconst alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".split(\"\");\r\n\r\nconst capsAllowed = [\r\n    'Characters',\r\n    'Cities',\r\n    'Countries',\r\n    'Holidays',\r\n    'Islands',\r\n    'Landmarks',\r\n    'Places',\r\n    'Religions',\r\n    'States',\r\n    'Winter Holidays'\r\n];\r\n\r\nconst allowCaps = (category) => {\r\n    return capsAllowed.includes(category);\r\n}\r\n\r\nfor(let i=0; i<alphabet.length; i++) {\r\n    Categories.push(\"Words that begin with \" + alphabet[i]);\r\n}\r\n\r\nexport {Categories, allowCaps}\r\n\r\n","import React from 'react';\r\nimport { Card } from '@material-ui/core'\r\n\r\nclass Timer extends React.Component {\r\n    render () {\r\n\r\n        return (\r\n            <Card style={{maxWidth:\"100px\", margin:\"0 auto 15px auto\"}}>\r\n                <h1>{this.props.minutes || \"0\"}:{this.props.seconds<10 && \"0\"}{this.props.seconds}</h1>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Timer;\r\n\r\n","import React from 'react';\r\n\r\nconst wordStyle = {\r\n    display: \"inline-block\",\r\n    border: \"1px solid lightgray\",\r\n    borderRadius: \"6px\",\r\n    padding: \"4px 8px\",\r\n    margin: \"6px 4px\",\r\n}\r\n\r\nexport default (props) => {\r\n    const arr = props.text.split(\" \").filter(w=>w); //filter prevents empty strings from counting as a word \r\n    let unique = [...new Set(arr)]; //removes duplicate words\r\n\r\n    return (<div className=\"container\" style={{marginTop:\"15px\", overflow:\"wrap\"}}>\r\n        <h4>Words: {unique.length}</h4>\r\n        {unique.map((word, i) => {\r\n            return <span style={wordStyle} key={i}>{word}</span>\r\n        })}\r\n    </div>);\r\n}","import React, {useContext, useState, useEffect} from 'react';\r\n//import { useSpeechRecognition } from 'react-speech-kit'; //https://github.com/MikeyParton/react-speech-kit\r\nimport useSpeechRecognition from '../util/SpeechRecognition';\r\nimport axios from 'axios';\r\n\r\nimport { Redirect, navigate } from '@reach/router'\r\nimport { Button, Link } from '@material-ui/core';\r\n\r\nimport SpeechEndpoint from '../constants/SpeechEndpoint';\r\nimport SessionContext from '../util/SessionContext';\r\nimport PageHeader from '../components/PageHeader';\r\nimport { Categories, allowCaps } from '../constants/Categories';\r\nimport Timer from '../components/Timer';\r\nimport Transcript from '../components/Transcript';\r\nimport AxiosErrors from '../util/AxiosErrors';\r\n\r\nexport default (props) => {\r\n    const context = useContext(SessionContext);\r\n    if (!context.session.userId) { return <Redirect noThrow to=\"/login\" /> }\r\n\r\n    let lowercase = true;\r\n\r\n    const [seconds, setSeconds] = useState(0);\r\n    const [transcript, setTranscript] = useState(\"\");\r\n    const [category, setCategory] = useState(\"\");\r\n\r\n    const { listen, listening, stop, supported } = useSpeechRecognition({\r\n        onResult: result => {\r\n            console.log(\"on result triggered\")\r\n            const newTranscript = (lowercase) ? result.toLowerCase() : result;\r\n            setTranscript(prevTranscript => prevTranscript + \" \" + newTranscript);\r\n        },\r\n        onEnd: () => {\r\n            console.log(\"on end triggered\")\r\n            endExercise();\r\n        }\r\n    })\r\n\r\n    if(!supported) {\r\n        return (<>\r\n            <PageHeader currentPage=\"exercise\"/>\r\n            <h2>Exercises</h2>\r\n            <div>This browser does not support the Web Speech API.<br/>\r\n            Try opening this site in Google Chrome (Desktop or Android, but NOT iOS). \r\n            <br/><Link href='https://developer.mozilla.org/en-US/docs/Web/API/Web_Speech_API/Using_the_Web_Speech_API#Browser_support'>\r\n            Learn more about browser compatibility</Link></div></>);\r\n    }\r\n\r\n   useEffect(() => {  //listen() has to run in useEffect or it will throw errors.  \r\n        setNewCategory();        \r\n        listen({interimResults:false});\r\n        //eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        //console.log(\"timer useEffect fired. seconds = \" + seconds); \r\n        const ticker = setTimeout(() => {  \r\n            if(seconds > 0) {\r\n                if (listening) setSeconds(seconds - 1)\r\n            } else if (listening) { \r\n                stop();\r\n            }\r\n        }, 1000); \r\n    \r\n        return () => clearTimeout(ticker); //cleanup (will unmount)\r\n        //eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [seconds]);\r\n\r\n\r\n    const setNewCategory = () => {\r\n        const newCat = Categories[Math.floor(Math.random() * Categories.length)];\r\n        if (newCat === context.session.lastCategory) {\r\n            console.log(\"Random new category matches last category. Trying again...\")\r\n            return setNewCategory();\r\n        }\r\n        if (allowCaps(newCat)) lowercase = false;\r\n        setCategory(newCat);\r\n        setSeconds(60);\r\n        context.setSession({\r\n            ...context.session,\r\n            lastCategory: newCat\r\n        });\r\n    }\r\n\r\n    const endExercise = () => {\r\n        if (context.session.userId === \"guest\") {\r\n            navigate('/exercise/fresh');\r\n            return;\r\n        }\r\n\r\n        if (transcript.length === 0) {\r\n            navigate('/exercise/restart');\r\n            return;\r\n        }\r\n        \r\n        axios.post(SpeechEndpoint + \"exercise\", \r\n            {userId:context.session.userId, category:category, transcript:transcript})\r\n            .then(result => {\r\n                console.log(result);\r\n                navigate('/editexercise/' + result.data._id)\r\n            })\r\n            .catch(err => AxiosErrors(err))\r\n    }\r\n\r\n    return (<>        \r\n        <PageHeader currentPage=\"exercise\"/>\r\n        <div className=\"container\">        \r\n            <h2>Exercises</h2>\r\n            {category && <>\r\n                <h4>The category is...</h4>\r\n                <h3>{category}</h3>\r\n                <Timer seconds={seconds}/>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={stop}>\r\n                        {transcript.length===0 ? \"New Category\" : \"Quit Early\"}\r\n                    </Button>\r\n                <Transcript text={transcript} />\r\n            </>}\r\n        </div>\r\n    </>)\r\n}","import React from 'react';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\nconst iconStyle = {\r\n    fontSize: \"medium\",\r\n    verticalAlign: \"middle\",    \r\n}\r\n\r\nexport default (props) => {\r\n    return (\r\n        <ClearIcon style={iconStyle} color=\"secondary\" onClick={props.action ?? false}/> \r\n    );\r\n}","import React, {useState, useRef} from 'react';\r\nimport { useDrag, useDrop } from \"react-dnd\";\r\n\r\nimport axios from 'axios';\r\nimport ContentEditable from 'react-contenteditable';\r\nimport { Paper } from '@material-ui/core'\r\nimport FlipToFrontIcon from '@material-ui/icons/FlipToFront';\r\n\r\nimport SpeechEndpoint from '../constants/SpeechEndpoint';\r\nimport AxiosErrors from '../util/AxiosErrors';\r\nimport DeleteWord from './DeleteWord';\r\n\r\nconst iconStyle = {\r\n    verticalAlign: \"middle\", \r\n    paddingLeft: \"5px\"\r\n}\r\n\r\n\r\nexport default (props) => {\r\n    const { exerciseId, index, deleteWord } = props;\r\n    const [word, setWord] = useState(props.word);\r\n    const ref = useRef(null);\r\n\r\n    // useDrop hook is responsible for handling whether any item gets hovered or dropped on the element\r\n    const [, drop] = useDrop({\r\n        // Accept will make sure only these element type can be droppable on this element\r\n        accept: \"WordDraggable\",\r\n        hover(item) {\r\n            //todo: show a tool tip with the anticipated combined words, prior to dropping\r\n            //console.log(\"hovering: \" + (item.index > index ? word + \" \" + item.id : item.id + \" \" + word));\r\n        },\r\n        drop(item) { // item is the dragged element\r\n            if(!ref.current) return;\r\n            const dragIndex = item.index;\r\n            const hoverIndex = index; // current element where the dragged element is hovered on\r\n            if (dragIndex === hoverIndex) return; // If the dragged element is droppedin the same place, do nothing\r\n            combineWords(dragIndex, hoverIndex, item.id, word);\r\n            //console.log(\"item:\", item, \"word:\", word);\r\n            /*\r\n              Update the index for dragged item directly to avoid flickering\r\n              when the image was half dragged into the next\r\n            */\r\n            item.index = hoverIndex;\r\n        }\r\n    });\r\n\r\n    // useDrag will be responsible for making an element draggable. It also expose, isDragging method to add any styles while dragging\r\n    const [{ isDragging }, drag] = useDrag({\r\n        // item denotes the element type, unique identifier (id) and the index (position)\r\n        item: { type:\"WordDraggable\", id: word, index },\r\n        // collect method is like an event listener, it monitors whether the element is dragged and exposes that information\r\n        collect: monitor => ({\r\n            isDragging: monitor.isDragging()\r\n        })\r\n    });\r\n\r\n    /* \r\n        Initialize drag and drop into the element using its reference.\r\n        Here we initialize both drag and drop on the same element (i.e., WordDraggable component)\r\n    */\r\n    drag(drop(ref));\r\n\r\n    const combineWords = (dragIndex, hoverIndex, dragWord, hoverWord) => {\r\n        //console.log(\"dragIndex:\", dragIndex, \" hoverIndex:\", hoverIndex);\r\n        //always set the target index to the hover index. this is the index native to the current WordDraggable.\r\n        const newWord = (dragIndex > hoverIndex) ? hoverWord + \" \" + dragWord : dragWord + \" \" + hoverWord;\r\n        //console.log(newWord);\r\n        updateWord(newWord, dragIndex);\r\n    }\r\n\r\n    const updateWord = (updatedWord, deleteIndex=-1) => {\r\n        axios.put(SpeechEndpoint + \"exercise/\" + exerciseId + \"/updateWord\", {index:index, word:updatedWord})\r\n            .then(response => {\r\n                setWord(updatedWord);\r\n                if (updatedWord.length === 0) deleteWord(index)\r\n                else if (deleteIndex >= 0) deleteWord(deleteIndex);\r\n            })\r\n            .catch(err => { AxiosErrors(err); })\r\n    }\r\n\r\n    const disableNewLines = (event) => {\r\n        var keyCode = event.which || event.keyCode;\r\n        keyCode === 13 && event.preventDefault();\r\n    }\r\n\r\n    const wordStyle = {\r\n        display: \"inline-block\",\r\n        border: \"1px solid lightgray\",\r\n        borderRadius: \"6px\",\r\n        padding: \"4px 8px\",\r\n        margin: \"7px 8px\",\r\n        opacity: isDragging ? 0 : 1,\r\n    }\r\n\r\n    return (<Paper style={wordStyle} ref={ref}>\r\n        <DeleteWord action={() => deleteWord(index)} />\r\n\r\n        <ContentEditable \r\n            style={{display:\"inline-block\", marginLeft: \"5px\"}} \r\n            html={word} \r\n            onKeyPress={(e) => disableNewLines(e)}\r\n            onChange={(e) => updateWord(e.target.value.trim())}/>\r\n        \r\n        <FlipToFrontIcon style={iconStyle} color=\"primary\" /> \r\n    </Paper>);\r\n}","import React, {useState} from 'react';\r\nimport axios from 'axios';\r\nimport { navigate } from '@reach/router'\r\n\r\nimport { DndProvider } from \"react-dnd\";\r\nimport HTML5Backend from \"react-dnd-html5-backend\";\r\n\r\nimport SpeechEndpoint from '../constants/SpeechEndpoint';\r\nimport AxiosErrors from '../util/AxiosErrors';\r\nimport WordDraggable from '../components/WordDraggable';\r\n\r\nexport default (props) => {\r\n    const {words, setWords} = props;\r\n    const [deleting, setDeleting] = useState(false);\r\n\r\n    const deleteWord = (index) => {\r\n        if (deleting) return; \r\n        setDeleting(true);\r\n        axios.put(SpeechEndpoint + \"exercise/\" + props.exerciseId + \"/deleteWord\", {index: index})\r\n            .then(response => {\r\n                //console.log(response.data);\r\n                if (response.data.words.length > 0) setWords(response.data.words);\r\n                else deleteExercise();\r\n            })\r\n            .catch(err => { AxiosErrors(err); })\r\n            .finally(() => setDeleting(false))\r\n    }\r\n\r\n    const deleteExercise = () => {\r\n        axios.delete(SpeechEndpoint + \"exercise/\" + props.exerciseId)\r\n            .then(response => {\r\n                console.log(\"deleted exercise. navigating to new exercise\");\r\n                navigate (\"/exercise\");\r\n            })\r\n            .catch(err => { AxiosErrors(err); })\r\n    }\r\n\r\n\r\n    return (<div style={{marginTop:\"15px\", overflow:\"wrap\"}}>\r\n        <DndProvider backend={HTML5Backend}>\r\n            {words.map((word, i) => {\r\n                return (\r\n                    <WordDraggable key={word+i} index={i} exerciseId={props.exerciseId} word={word} deleteWord={deleteWord}/>\r\n                );\r\n            })}\r\n        </DndProvider>        \r\n    </div>);\r\n}","import React, {useState, useEffect, useContext} from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect, navigate } from '@reach/router'\r\nimport { Button, Link } from '@material-ui/core';\r\nimport FlipToFrontIcon from '@material-ui/icons/FlipToFront';\r\n\r\nimport SessionContext from '../util/SessionContext';\r\nimport SpeechEndpoint from '../constants/SpeechEndpoint';\r\nimport PageHeader from '../components/PageHeader'\r\nimport EditWords from '../components/EditWords'\r\nimport AxiosErrors from '../util/AxiosErrors';\r\nimport DeleteWord from '../components/DeleteWord';\r\n\r\nconst dragIconStyle = {\r\n    verticalAlign: \"middle\", \r\n    fontSize: \"medium\",\r\n}\r\n\r\nexport default (props) => {\r\n    const context = useContext(SessionContext);\r\n    if (!context.session.userId) { return <Redirect noThrow to=\"/login\" /> }\r\n    \r\n    const [category, setCategory] = useState(\"\");\r\n    const [words, setWords] = useState([]);\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [showInstructions, setShowInstructions] = useState(props.show || props.alwaysShow || false);    \r\n\r\n    useEffect(() => {\r\n        axios.get(SpeechEndpoint + \"exercise/\" + props.id)\r\n            .then(response => {\r\n                setCategory(response.data.category);\r\n                setWords(response.data.words);\r\n                setLoaded(true); \r\n            })\r\n            .catch(err => {\r\n                console.log(AxiosErrors(err));\r\n            })\r\n       //eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (<>\r\n        <PageHeader currentPage=\"editexercise\"/>\r\n        <div className=\"container\">\r\n            <h2>Results</h2>\r\n            <h3>Category: {category}</h3>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={() => navigate(\"/startexercise\")}>Start New Exercise</Button>\r\n            <h4>You recorded <b>{words.length} words!</b></h4>\r\n            <Link style={{marginBottom:\"0.5rem\"}} component=\"button\" onClick={()=>setShowInstructions(!showInstructions)}>\r\n                {showInstructions ? \"Hide Instructions\" : \"Instructions\"}\r\n            </Link>\r\n            {showInstructions && <>\r\n                <p>To edit a word, by typing over it (if you back-space over it, the word will be deleted).</p><p>\r\n                To combine 2 words, drag one word on top of the other using the drag symbol <FlipToFrontIcon style={dragIconStyle} color=\"primary\" />.</p><p>\r\n                To delete a word, by click the delete symbol: <DeleteWord action={()=>false}/>,\r\n                or back-space over the entire word.</p>            \r\n            </>}\r\n            \r\n            {loaded && <EditWords words={words} setWords={setWords} exerciseId={props.id} />} \r\n        </div>\r\n    </>);\r\n}\r\n","import React, {useContext, useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { Table, TableHead, TableBody, TableRow, TableCell } from '@material-ui/core';\r\n\r\nimport SessionContext from '../util/SessionContext'\r\nimport SpeechEndpoint from '../constants/SpeechEndpoint';\r\nimport AxiosErrors from '../util/AxiosErrors';\r\nimport WrappedLink from './WrappedLink';\r\n\r\nconst AllDates = (props) => {\r\n    const context = useContext(SessionContext);\r\n    const [data, setData] = useState([])\r\n    const [loaded, setLoaded] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const timezone = encodeURIComponent(Intl.DateTimeFormat().resolvedOptions().timeZone);\r\n        axios.get(SpeechEndpoint + \"reports/alldates/\" + timezone + \"/\" + context.session.userId)\r\n            .then(res => {\r\n                //console.log(res.data);\r\n                setData(res.data);\r\n                setLoaded(true);\r\n            })\r\n            .catch(err => { AxiosErrors(err); })\r\n        //eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\nreturn (<>\r\n        {loaded && data.length === 0 && <>\r\n            <h3>No Exercises Found</h3>\r\n            <p>No exercises were found for this user in the database.<br/>\r\n            Make sure you are logged in and have completed at least one exercise.</p>\r\n        </>}\r\n\r\n        {loaded && data.length > 0 && <>\r\n        <h3>Summary: Activity by Date</h3>\r\n        <Table style={{maxWidth:400, margin:\"0 auto\"}} size=\"small\">\r\n            <TableHead>\r\n                <TableRow>\r\n                    <TableCell>Date</TableCell>\r\n                    <TableCell>Exercises</TableCell>\r\n                    <TableCell>Action</TableCell>\r\n                </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n                {data.map((d, i) => {\r\n                    return (\r\n                        <TableRow key={i}>\r\n                            <TableCell>{d._id}</TableCell>\r\n                            <TableCell>{d.sum}</TableCell>\r\n                            <TableCell><WrappedLink to={'/reports/onedate/' + d._id}>View Exercises</WrappedLink></TableCell>\r\n                        </TableRow>\r\n                    )\r\n                })}\r\n            </TableBody>\r\n        </Table>\r\n        </>}\r\n    </>)\r\n}\r\n\r\nexport default AllDates;","import React, {useContext, useState, useEffect} from 'react';\r\nimport { navigate } from '@reach/router'\r\nimport axios from 'axios';\r\n\r\nimport { Table, TableHead, TableBody, TableRow, TableCell } from '@material-ui/core';\r\n\r\nimport SessionContext from '../util/SessionContext'\r\nimport SpeechEndpoint from '../constants/SpeechEndpoint';\r\nimport AxiosErrors from '../util/AxiosErrors';\r\nimport WrappedLink from './WrappedLink';\r\n\r\nconst getTodayLocalDateOnly = () => {\r\n    // Comments show conversion of example date from UTC to Pacific Daylight Time\r\n    var todayUtc = new Date(); // 2020-03-26T00:34:03.194Z (local time is 3/25 17:34, so we need to fix the date)\r\n    var offset = todayUtc.getTimezoneOffset(); // 420\r\n    var minutesAdjusted = todayUtc.setMinutes(todayUtc.getMinutes() - offset); //1585157643194\r\n    return new Date(minutesAdjusted).toISOString().substring(0, 10); // 2020-03-25T17:34:03.194Z => \"2020-03-25\"\r\n}\r\n\r\nconst OneDate = (props) => {\r\n    const context = useContext(SessionContext);\r\n    const [data, setData] = useState([]);\r\n    \r\n    const todayString = getTodayLocalDateOnly(); //gets local date in string formatted as YYYY-MM-DD \r\n    const reportDateString = props.date === \"today\" ? todayString : props.date;\r\n    const isToday = reportDateString === todayString;\r\n\r\n    //converting from format YYYY-MM-DD results in the GMT date, not local date. \r\n    //to prevent this, we have to convert the format to YYYY/MM/DD. see this post:\r\n    //https://stackoverflow.com/questions/7556591/is-the-javascript-date-object-always-one-day-off\r\n    const friendlyDate = new Date(reportDateString.replace(/-/g, '/')).toDateString();\r\n\r\n    useEffect(() => {\r\n        //const dateParam = date.toISOString().substring(0, 10);\r\n        const timezone = encodeURIComponent(Intl.DateTimeFormat().resolvedOptions().timeZone);\r\n        axios.get(SpeechEndpoint + `reports/onedate/${reportDateString}/${timezone}/${context.session.userId}`)\r\n            .then(res => {\r\n                //console.log(res.data);\r\n                if (res.data.length === 0) {\r\n                    console.log(\"No exercises found for \" + reportDateString + \". Redirecting to all dates.\");\r\n                    navigate('/reports');\r\n                }\r\n                setData(res.data);\r\n            })\r\n            .catch(err => AxiosErrors(err)) \r\n        //eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (<>        \r\n        <h3>{isToday ? \"Today's Activity\" : \"Activity for \" + friendlyDate}</h3>\r\n        {!isToday && <p>Editing is only possible for exercises performed on today's date.</p>}\r\n        <WrappedLink to=\"/reports\">View activity for another date</WrappedLink>\r\n        <Table style={{maxWidth:600, margin:\"0 auto\"}} size=\"small\">\r\n            <TableHead>\r\n                <TableRow>\r\n                    <TableCell>Category</TableCell>\r\n                    <TableCell>Words</TableCell>\r\n                    {isToday && <TableCell>Actions</TableCell>}\r\n                </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n                {data.map((d, i) => {\r\n                    return (\r\n                        <TableRow key={i} style={{verticalAlign:\"top\"}}>\r\n                            <TableCell>{d.category}<br/></TableCell>\r\n                            <TableCell><u>{d.words.length} words</u>: <span>{d.words.join(', ')}</span></TableCell>\r\n                            {isToday && <TableCell><WrappedLink to={\"/editexercise/\" + d._id}>Edit</WrappedLink></TableCell>}\r\n                        </TableRow>\r\n                    )\r\n                })}\r\n            </TableBody>\r\n        </Table>\r\n    </>)\r\n}\r\n\r\nexport default OneDate;","import React, {useContext} from 'react';\r\nimport { Redirect } from '@reach/router';\r\n\r\nimport SessionContext from '../util/SessionContext'\r\nimport PageHeader from '../components/PageHeader'\r\nimport AllDates from '../components/Report_AllDates';\r\nimport OneDate from '../components/Report_OneDate';\r\nimport WrappedLink from '../components/WrappedLink';\r\n\r\nexport default (props) => {\r\n    const report = props.report || \"alldates\";\r\n    const context = useContext(SessionContext);\r\n    if (!context.session.userId) { return <Redirect noThrow to=\"/login\" /> }\r\n\r\n    if (context.session.userId === \"guest\") {        \r\n        return (<>\r\n            <PageHeader currentPage=\"reports\"/>\r\n            <h2>Reports</h2>\r\n            <p>As a Guest User, your exercises are not saved.</p>\r\n            <p>To save your results and view them over \r\n            time, <WrappedLink to=\"/login\">Log In</WrappedLink> or <WrappedLink to=\"/register\">Register</WrappedLink>.</p>\r\n        </>)\r\n    }\r\n\r\n    return (<>\r\n        <PageHeader currentPage=\"reports\"/>\r\n        <h2>Reports</h2>\r\n        <div className=\"container\">\r\n            {report === \"alldates\" && <AllDates />}\r\n            {report === \"onedate\" && <OneDate date={props.param || \"today\" } />}\r\n        </div>        \r\n    </>)\r\n}","import React, {useState, useEffect} from 'react';\nimport './App.css';\n\nimport SessionContext from './util/SessionContext';\nimport {getSessionCookie, setSessionCookie} from './util/SessionCookie';\n\nimport { Router } from '@reach/router';\nimport {CssBaseline} from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport {getTheme} from './util/Theme';\nimport Main from './views/Main';\nimport Register from './views/Register';\nimport Login from './views/Login';\nimport Logout from './views/Logout';\nimport Exercise from './views/Exercise';\nimport StartExercise from './views/StartExercise';\nimport EditExercise from './views/EditExercise';\nimport Reports from './views/Reports';\n//import OldBrowser from './views/OldBrowser';\n\nfunction App() {\n  const [session, setSession] = useState(getSessionCookie());\n\n  useEffect(() => {\n    console.log(\"persisting session via useEffect\")\n    setSessionCookie(session);\n  }, [session])\n\n  const theme = getTheme(session.theme);\n\n  return (\n    <div className=\"App\">\n      <SessionContext.Provider value={{session, setSession}}>\n        <ThemeProvider theme={theme}>\n          <CssBaseline/>\n          <Router>\n              <Main default path=\"/\" />\n              <Register path=\"register\"/>\n              <Login path=\"login\" />\n              <Logout path=\"logout\" />\n              <Exercise path=\"exercise/:param\" />\n              <StartExercise path=\"startexercise\" />\n              <EditExercise path=\"editexercise/:id\" />              \n              <Reports path=\"reports/:report/:param\" />  \n              <Reports path=\"reports\" />  \n              {/* <OldBrowser path=\"oldbrowser\" /> */}\n          </Router>\n        </ThemeProvider>\n      </SessionContext.Provider>\n    </div>\n  );\n}\nexport default App;\n","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport teal from '@material-ui/core/colors/teal' \r\n//import green from '@material-ui/core/colors/green';//-good\r\n//import orange from '@material-ui/core/colors/orange';\r\n//import cyan from '@material-ui/core/colors/cyan' //good for dark\r\n// OK for light: import indigo from '@material-ui/core/colors/indigo';\r\n// OK for dark: import amber from '@material-ui/core/colors/amber'\r\n// NO : import deepOrange from '@material-ui/core/colors/deepOrange';  \r\n// NO : import blue from '@material-ui/core/colors/blue';\r\n// NO : import lime from '@material-ui/core/colors/lime'\r\n// NO: import blueGrey from '@material-ui/core/colors/blueGrey'\r\n\r\nexport const getTheme = (darkOrLight) => {\r\n    if (!darkOrLight) darkOrLight = \"dark\";\r\n\r\n    //const shade = (darkOrLight === \"dark\") ? 300 : 800;\r\n    \r\n    const theme = createMuiTheme({ \r\n        palette: { \r\n            type: darkOrLight, \r\n            primary: teal,\r\n        } \r\n    });\r\n\r\n    return theme;\r\n}\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}